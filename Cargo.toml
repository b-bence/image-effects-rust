[package]
name = "image-effects-rust"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# We are compiling Rust to WA. As a result we can define functions which are accessible via JS
# By default, Rust will assume that we will call Rust functions with Rust code 
# -> Should tell Rust that we'll be able to call our functions from other languages
# Has to add a table called lib
# Rust creates a crate during compilation which a concept that is similar to library/package in other languages 
# By adding "cdylib"Create a crate that adds support for other langauges - will be able to call rust function with non rust code
[lib]
crate-type = ["cdylib"]

# Wasm-bindgen 
# Export Rust functions to JS and vice versa
# The crate-type setting above allows us to communicate in any language other than Rust, however Rust doesn't know our target language
# Image: add the grayscale effect. Use version 0.23.14 because a newer one could cause errors
[dependencies]
wasm-bindgen = "0.2.79"
base64 = "0.13.0"
image = "0.23.14"

# Web sys: exports a set of JS functions (which are already defined) to Rust. Could add the dependency under the dependencies table, but then it would download everthing
[dependencies.web-sys]
version = "0.3.56"
features = ["console"]
